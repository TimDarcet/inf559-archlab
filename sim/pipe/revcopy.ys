#/* $begin revcopy-ys */
##################################################################
# revcopy.ys
#
# Copy a src block of len words to dst in reverse order.
# Return the number of positive words (>0) contained in src.
#
# Timothee Darcet timothee.darcet
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# %r10: constant 1
# %r8: constant 8
# %rbx: tmp storage
# You can modify this portion
	# Loop header
	irmovq $0, %rax		# count = 0;
	andq %rdx, %rdx		# len <= 0?
	jle Done		# if so, goto Done:
 	rrmovq %rdx, %r11       # r11 = len
	irmovq $1, %r10
	irmovq $8, %r8
	subq %r10, %r11         # r11--	
Init:	jle Loop		# if so, goto Loop:
	addq %r8, %rsi		# dst++
	subq %r10, %r11         # r11--
	jmp Init

Loop:	mrmovq (%rdi), %rbx	# read val from src...
	rmmovq %rbx, (%rsi)	# ...and store it to dst
	andq %rbx, %rbx		# val <= 0?
	jle Npos		# if so, goto Npos:
	addq %r10, %rax		# count++
Npos:	addq %r8, %rdi		# src++
	subq %r8, %rsi		# dst--
	subq %r10, %rdx		# len--
	jg Loop			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end revcopy-ys */
