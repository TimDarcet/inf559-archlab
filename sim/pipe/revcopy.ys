#/* $begin revcopy-ys */
##################################################################
# revcopy.ys
#
# Copy a src block of len words to dst in reverse order.
# Return the number of positive words (>0) contained in src.
#
# Timothee Darcet timothee.darcet
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# %rbx: tmp storage
# %rax: count
# You can modify this portion
	# Loop header
	andq %rdx, %rdx		# len <= 0?
	jle Done         	# if so, goto Done:
 	irmovq $0, %rax		# count = 0;
	addq %rdx, %rdx		# %rdx = 2 * len
	addq %rdx, %rdx		# %rdx = 4 * len
	addq %rdx, %rdx		# %rdx = 8 * len
	addq %rdx, %rsi		# %rsi is at the end of word
	iaddq $-8, %rsi
Loop:	mrmovq (%rdi), %rbx	# read val from src...
	rmmovq %rbx, (%rsi)	# ...and store it to dst
	andq %rbx, %rbx		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos:	iaddq $8, %rdi		# src++
	iaddq $-8, %rsi		# dst--
	iaddq $-8, %rdx		# len--
	jle Loop			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end revcopy-ys */
